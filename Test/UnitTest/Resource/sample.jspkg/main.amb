top: VBox {
    index: Int 0
    adbook: AddressBook {
    }
    message: HBox {
	    logo: Image {
			name: String "logo"
	    }
	    text_a: TextField {
			text: String Listner(index: top.index) %{
				return "index: " + top.adbook.value(index, "family_name") ;
			%}
	    }
		graphics: Graphics2D {
			origin_x: Float -1.0
			origin_y: Float -1.0
			size_x:   Float  2.0
			size_y:   Float  2.0
			draw: Event(context, count) %{
				//console.log("[Grahics2D] " + count) ;
				let lframe = context.logicalFrame ;
				let offset = Math.PI * ((count % 10) / 10.0) ; 
				context.moveTo(lframe.x, Math.sin(lframe.x + offset)) ;
				for(let x=lframe.x ; x<=lframe.x + lframe.width ; x+=0.1) {
					let y = Math.sin(x + offset) ;
					context.lineTo(x, y) ;
				}
			%}
			init: Init %{
				console.log("[Graphics2D] Init") ;
				self.start(1.0, 10.0) ;
			%}
		}

		bitmap: Bitmap {
			draw: Event(context, count) %{
				let pos  = count % 10 ;
				context.clean() ;
				context.set(pos, pos, Color.blue) ;
			%}
			init: Init %{
				console.log("[Bitmap] Init") ;
				self.start(1.0, 10.0) ;
			%}
		}

    }
    boxes: HBox {
		checkBox0: CheckBox {
			title:	String "option-0"
			pressed: Event(status) %{
				console.log("option-0: " + status) ;
			%}
		}
		checkBox1: CheckBox {
			title:	String "option-1"
			status: Bool false
			pressed: Event(status) %{
				console.log("option-1: " + status) ;
			%}
		}
		button0: Button {
			title:	String Listner(state: top.message.graphics.state) %{
				let result = "Unknown" ;
				switch(state) {
					case AnimationState.idle:
						result = "Start" ;
					break ;
					case AnimationState.run:
						result = "Stop" ;
					break ;
					case AnimationState.pause:
						result = "Stop" ;
					break ;
				}
				return result ;
			%}

			pressed: Event() %{
				let grp = top.message.graphics ;
				let bmp = top.message.bitmap ;
				switch(grp.state){
				  case AnimationState.idle:
					top.message.graphics.start(1.0, 10.0) ;
					top.message.bitmap.start(1.0, 10.0) ;
				  break ;
				  case AnimationState.run:
					top.message.graphics.stop() ;
					top.message.bitmap.stop() ;
				  break ;
				  case AnimationState.pause:
				  break ;
				}

			%}
		}
		menu0: PopupMenu {
			items: String ["a", "b", "c"]
		}
    }
    dataTable: Table {
	init: Init %{
		let table = ValueTable() ;

		let rec0  = table.newRecord() ;
		rec0.setValue(0, "c0") ;
		rec0.setValue(1, "c1") ;
		rec0.setValue(2, "c2") ;
		table.append(rec0) ;
		
		let rec1  = table.newRecord() ;
		rec1.setValue(0, "c0") ;
		rec1.setValue(1, "c1") ;
		rec1.setValue(2, "c2") ;
		table.append(rec1) ;

		self.store(table) ;
	%}
    }
    labelBox: LabeledBox {
	title: String "Label Box"
	box: HBox {
		firstName: Label {
			text: String "first-name"
		}
		givenName: Label {
			text: String "given-name"
		}
        }
    }
    valueBox: ValueView {
	init: Init %{
		let src = {
			sec0: {
				subsec0: "s0",
				subsec1: 10
			},
			sec1: {
				subsec2: "s0",
				subsec3: true
			}
		} ;
		self.value = src ;
	%}
    }
    button_a: Button {
        title:  String "Go to Second"
        pressed: Event() %{
			console.log("launch button view .. start") ;
			enterView("button_view", function(val){
				console.log("button_view is closed: " + val) ;
			}) ;
        %}
    }
	init: Init %{
		top.boxes.menu0.items = ["Hello", "Good morning", "Good evening"]
	%}
}

